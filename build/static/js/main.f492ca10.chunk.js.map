{"version":3,"sources":["Cards.js","Categories.js","Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","articles","className","length","map","article","index","src","urlToImage","alt","description","substr","content","author","publishedAt","href","url","target","rel","React","memo","Categorise","categories","selectedCategory","changeCategory","category","id","name","onClick","value","toUpperCase","Loader","isLoading","style","display","newsCache","today","Date","toJSON","split","yesterday","join","App","useState","setSelectedCategory","setArticles","setIsLoading","useEffect","fetch","then","response","json","data","catch","error","console","Categories","event","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f492ca10.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Cards = ({ articles }) => {\r\n    return (\r\n        <div className=\"article-container\">\r\n            { articles && articles.length > 0 && articles.map((article, index) => \r\n                <div \r\n                    key={ article?.author + index }\r\n                    className=\"article\">\r\n                    <div>\r\n                        <img \r\n                            className=\"image\" \r\n                            src={article?.urlToImage ?? \"/default.jpg\"} \r\n                            alt=\"news_image\"/>\r\n                    </div>\r\n                    <div className=\"article-body\">\r\n                        <div className=\"article-header\">\r\n                            {article?.description?.substr(0, 50) + \"...\"}\r\n                        </div>\r\n                        <div className=\"article-content\">\r\n                            {article?.content?.substr(0, 100) + \"...\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"footer\">\r\n                        <div className=\"author\">{article?.author}</div>\r\n                        <div className=\"more-container\">\r\n                            <div className=\"date\">{article?.publishedAt}</div>\r\n                            <div className=\"more\">\r\n                                <a \r\n                                    href={article.url ?? \"#\"}\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\" >more...</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Cards);","import React from 'react';\r\n\r\nconst Categorise = ({ categories, selectedCategory, changeCategory }) => {\r\n    return (\r\n        <header className=\"category-container\">\r\n            { categories.map(( category, index ) => \r\n                <div \r\n                    className=\"button-container\" \r\n                    key={ category + index }>\r\n                    <button \r\n                        id={ category + \"-btn\" } \r\n                        name={ category + \"-btn\" } \r\n                        className={ selectedCategory === category ? \"btn active\" : \"btn\" }\r\n                        onClick={changeCategory}\r\n                        value={category}>{ category.toUpperCase() }</button>\r\n                </div>\r\n              )\r\n            }\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default React.memo(Categorise);","import React from 'react';\r\n\r\nconst Loader = ({ isLoading }) => {\r\n    return(\r\n        <div className=\"loader-container\" style={{ display: isLoading ? \"block\" : \"none\" }}>\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Loader);","import React, { useState, useEffect } from 'react';\nimport Cards from './Cards';\nimport Categories from './Categories';\nimport Loader from './Loader';\nimport './App.css';\n\nconst API_KEY = '3045f8ea87e742488ad5074cb446af40';\nconst categories = ['bitcoin', 'u.s.a', 'apple', 'techcrunch', 'wall street journal'];\nlet newsCache = {};\n\nconst today = new Date().toJSON().split('T')[0]\nlet yesterday = today.split('-');\nyesterday[2] = --yesterday[2];\nyesterday = yesterday.join('-');\n\nfunction App() {\n  const [ selectedCategory, setSelectedCategory ] = useState(categories[0]);\n  const [ articles, setArticles ] = useState([]);\n  const [ isLoading, setIsLoading ] = useState(false);\n\n  const changeCategory = (event) => {\n    event.preventDefault();\n      if(event.target.value) {\n        setSelectedCategory(event.target.value);\n    }\n  }\n\n  useEffect(() => {\n    if(!newsCache[selectedCategory]) {\n      setIsLoading(true);\n      fetch(`https://newsapi.org/v2/everything?q=${selectedCategory}&from=${yesterday}&to=${today}&sortBy=popularity&apiKey=${API_KEY}`)\n      .then(response => response.json())\n      .then(data => {\n        newsCache[selectedCategory] = data;\n        setArticles(newsCache[selectedCategory]?.articles);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setIsLoading(false);\n        console.error(error);\n      });\n    } else {\n      setArticles(newsCache[selectedCategory]?.articles);\n    }\n  }, [selectedCategory])\n\n  return (\n    <div className=\"app-container\">\n      <Categories \n        selectedCategory={selectedCategory} \n        categories={categories}\n        changeCategory={changeCategory}/>\n      <Cards articles={articles}/>\n      <Loader isLoading={isLoading} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}